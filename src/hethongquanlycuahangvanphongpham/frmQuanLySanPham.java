/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hethongquanlycuahangvanphongpham;


import hethongquanlycuahangvanphongpham.Model.Loai;
import hethongquanlycuahangvanphongpham.Model.SanPham;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.ResultSetMetaData;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Vector;
/**
 *
 * @author TienDuc
 */
public class frmQuanLySanPham extends javax.swing.JFrame {

        PreparedStatement pst = null;
        ResultSet rs = null;
        int q,i;
        private ArrayList<Loai> listLoai = new ArrayList<>();
        //Thiếu mã nhà cung cấp
        public void GetDataTable() throws SQLException
        {
            Connection con = ConnectionDB.getConnectDB();
            String sql = "select * from htquanlycuahangvanphongpham.sanpham sp "
                    + "INNER JOIN htquanlycuahangvanphongpham.loai l ON sp.MaLoai = l.MaLoai";
            try
            {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
            ResultSetMetaData stData = rs.getMetaData();
            q = stData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel)tb_SanPham.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next()){
                Vector columnData = new Vector();
                for(i=1; i<=q; i++)
                {
                    columnData.add(rs.getString("MaSanPham"));
                    columnData.add(rs.getString("TenSanPham"));
                    columnData.add(rs.getString("TenLoai"));
                    columnData.add(rs.getString("Gia"));
                    columnData.add(rs.getString("DVT"));
                    columnData.add(rs.getString("HanSuDung"));
                    columnData.add(rs.getString("SoLuongTon"));
                    columnData.add(rs.getString("TinhTrang")); 
                }
                RecordTable.addRow(columnData);
                }
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex);
            }
            ConnectionDB.closeConnectionDB(con);
        }
    /**
     * Creates new form frmSanPham
     */
    public frmQuanLySanPham() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);//Chỉnh JFrame ra giữa màn hình
        jDateQuanLySanPham.setLocale(new Locale("vi", "VN"));//Chuyển kiểu về định dạng dd mm yyyy
        jDateQuanLySanPham.setDateFormatString("dd/MM/yyyy");
        GetDataTable();
        loadCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_MaSanPham = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tf_SoLuongTon = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tf_TenSanPham = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tf_TinhTrang = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tf_Gia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tf_DonViTinh = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_SanPham = new javax.swing.JTable();
        btn_Dong = new javax.swing.JButton();
        btn_Them = new javax.swing.JButton();
        btn_Sua = new javax.swing.JButton();
        btn_Reset = new javax.swing.JButton();
        btn_Xoa = new javax.swing.JButton();
        cb_LoaiSP = new javax.swing.JComboBox<>();
        jDateQuanLySanPham = new com.toedter.calendar.JDateChooser();
        tf_MaSP = new javax.swing.JTextField();
        btn_TimKiemSP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Quản Lý Sản Phẩm");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Mã Sản Phẩm : ");

        tf_MaSanPham.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Tên Sản Phẩm : ");

        tf_SoLuongTon.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Tình Trạng :");

        tf_TenSanPham.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Loại : ");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Giá Bán : ");

        tf_TinhTrang.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Đơn Vị Tính : ");

        tf_Gia.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Hạn Sử Dụng : ");

        tf_DonViTinh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Số Lượng Tồn : ");

        tb_SanPham.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tb_SanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Loại", "Giá Bán", "Đơn Vị Tính", "Hạn Sử Dụng", "Số  Lượng Tồn", "Tính Trạng  Sản Phẩm"
            }
        ));
        tb_SanPham.setRowHeight(27);
        tb_SanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_SanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_SanPham);

        btn_Dong.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Dong.setText("Đóng");
        btn_Dong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DongActionPerformed(evt);
            }
        });

        btn_Them.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Them.setText("Thêm");
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_Sua.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Sua.setText("Sửa ");
        btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaActionPerformed(evt);
            }
        });

        btn_Reset.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Reset.setText("Reset");
        btn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResetActionPerformed(evt);
            }
        });

        btn_Xoa.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Xoa.setText("Xóa");
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });

        jDateQuanLySanPham.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tf_MaSP.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N

        btn_TimKiemSP.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_TimKiemSP.setText("Tìm Kiếm");
        btn_TimKiemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(tf_DonViTinh))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addComponent(jLabel5)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel6))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel4))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tf_TinhTrang)
                                            .addComponent(tf_Gia)
                                            .addComponent(tf_TenSanPham)
                                            .addComponent(tf_MaSanPham)
                                            .addComponent(cb_LoaiSP, 0, 400, Short.MAX_VALUE)))
                                    .addComponent(tf_SoLuongTon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(jDateQuanLySanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1138, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(btn_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(btn_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btn_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btn_Dong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(201, 201, 201))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(tf_MaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_TimKiemSP)
                                .addGap(38, 38, 38))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(588, 588, 588))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_MaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_TimKiemSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(tf_MaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_LoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_Gia, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_DonViTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jDateQuanLySanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel8)))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_SoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_TinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btn_Dong, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     public void arrageMaSP()
    {
        int randomNumber = (int) (Math.random() * 19999); // Tạo số ngẫu nhiên từ 0 đến 1000000
        tf_MaSanPham.setText("SP" + randomNumber);
        tf_MaSanPham.setEditable(false);// Không cho phép chỉnh sửa trực tiếp
    }
     public void loadCombobox() throws SQLException
    {
        String strSP="SELECT * FROM htquanlycuahangvanphongpham.loai;";
        Connection conn = ConnectionDB.getConnectDB();
        ResultSet resultSP = ConnectionDB.getSelectResult(conn,strSP);
          while(resultSP.next())
        {
            String MaLoai = resultSP.getString("MaLoai");
            String TenLoai= resultSP.getString("TenLoai");
            Loai loai = new Loai();
            loai.setMaloai(MaLoai);
            loai.setTenloai(TenLoai);
            listLoai.add(loai);
        }
        for(int i = 0;i < listLoai.size();i++)
        {
            cb_LoaiSP.addItem(listLoai.get(i).getTenloai());
        }
        ConnectionDB.closeConnectionDB(conn);
    }
    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        java.util.Date selectedDate = jDateQuanLySanPham.getDate();
        java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());
        Connection con = ConnectionDB.getConnectDB();
        String checkMaSanPham= "SELECT * FROM htquanlycuahangvanphongpham.sanpham WHERE MaSanPham=?";
        String sql = "insert into htquanlycuahangvanphongpham.sanpham(MaSanPham, TenSanPham, MaLoai, Gia, DVT, HanSuDung) value (?,?,?,?,?,?)";
        try{
            
        pst = con.prepareStatement(checkMaSanPham);
        pst.setString(1, tf_MaSanPham.getText());
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            JOptionPane.showMessageDialog(null, "Mã sản Phẩm đã tồn tại.");
            return; // Dừng thực hiện nếu tên người dùng đã tồn tại
        }
        
        pst = con.prepareStatement(sql);
        pst.setString(1, tf_MaSanPham.getText());
        pst.setString(2, tf_TenSanPham.getText());
        int selectedIndex = cb_LoaiSP.getSelectedIndex();
        pst.setString(3, listLoai.get(selectedIndex).getMaloai());
        pst.setString(4, tf_Gia.getText());
        pst.setString(5, tf_DonViTinh.getText());
        pst.setDate(6, sqlDate); 
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Đã hoàn thành việc thêm mới");
        GetDataTable();
        reset();
        
        }
        catch(SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        ConnectionDB.closeConnectionDB(con);

    }//GEN-LAST:event_btn_ThemActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
        Connection con = ConnectionDB.getConnectDB();
        String sql = "delete from htquanlycuahangvanphongpham.sanpham where MaSanPham = ?";
        if(!tf_MaSanPham.getText().equals(""))
        {
            try{
                pst = con.prepareStatement(sql);
                pst.setString(1, tf_MaSanPham.getText());   
                int rowsAffected = pst.executeUpdate();
                if(rowsAffected == 0)
                {
                    JOptionPane.showMessageDialog(null, "Sản phẩm không có trong danh sách", "Error", JOptionPane.ERROR_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Sản phẩm đã được xóa khỏi danh sách");
                    GetDataTable();
                    reset();
                }
            }
            catch(SQLException ex) {
                JOptionPane.showMessageDialog(null, "Sản phẩm không có trong danh sách", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else
        {
           JOptionPane.showMessageDialog(null, "Vui lòng chon sản phẩm để xóa", "Error", JOptionPane.ERROR_MESSAGE); 
        }
        
        ConnectionDB.closeConnectionDB(con);
    }//GEN-LAST:event_btn_XoaActionPerformed

    private void tb_SanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_SanPhamMouseClicked
       DefaultTableModel RecordTable = (DefaultTableModel)tb_SanPham.getModel();
        int SelectedRows = tb_SanPham.getSelectedRow();
        tf_MaSanPham.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        tf_MaSanPham.setEditable(false);
        tf_TenSanPham.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        String loaiSP = RecordTable.getValueAt(SelectedRows, 2).toString();
        for (int i = 0; i < cb_LoaiSP.getItemCount(); i++) {
            if (cb_LoaiSP.getItemAt(i).toString().equals(loaiSP)) {
                cb_LoaiSP.setSelectedIndex(i);
                break;
            }
        }
        tf_Gia.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        tf_DonViTinh.setText(RecordTable.getValueAt(SelectedRows, 4).toString());
        String dateString = RecordTable.getValueAt(SelectedRows, 5).toString();
        Date date = Date.valueOf(dateString);
        jDateQuanLySanPham.setDate(date);
        tf_SoLuongTon.setText(RecordTable.getValueAt(SelectedRows, 6).toString());
        tf_SoLuongTon.setEditable(false);
        tf_TinhTrang.setText(RecordTable.getValueAt(SelectedRows, 7).toString());
    }//GEN-LAST:event_tb_SanPhamMouseClicked

    private void btn_DongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DongActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát khỏi ứng dụng này không?", "Thoát khỏi ứng dụng", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION)
        {
            this.dispose();
        }
    }//GEN-LAST:event_btn_DongActionPerformed

    public void reset()
    {
        arrageMaSP();
        tf_MaSanPham.setEditable(false);
        tf_TenSanPham.setText("");
        cb_LoaiSP.setSelectedIndex(0);
        tf_Gia.setText("");
        tf_DonViTinh.setText("");
        tf_SoLuongTon.setText("");
    }
    private void btn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResetActionPerformed
        arrageMaSP();
        tf_MaSanPham.setEditable(false);
        tf_TenSanPham.setText("");
        cb_LoaiSP.setSelectedIndex(0);
        tf_Gia.setText("");
        tf_DonViTinh.setText("");
        tf_SoLuongTon.setText("");
    }//GEN-LAST:event_btn_ResetActionPerformed

    private void btn_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaActionPerformed
        java.util.Date selectedDate = jDateQuanLySanPham.getDate();
        java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());
        Connection con = ConnectionDB.getConnectDB();
        String sql = "UPDATE htquanlycuahangvanphongpham.sanpham SET TenSanPham = ?, MaLoai= ?, Gia=?, DVT=?, HanSuDung=?, SoLuongTon= ? WHERE MaSanPham=?";
        try {
        pst = con.prepareStatement(sql);
        pst.setString(1, tf_TenSanPham.getText());
        int selectedIndex = cb_LoaiSP.getSelectedIndex();
        pst.setString(2, listLoai.get(selectedIndex).getMaloai());
        pst.setString(3, tf_Gia.getText());
        pst.setString(4, tf_DonViTinh.getText());
        pst.setDate(5, sqlDate);
        pst.setString(6, tf_SoLuongTon.getText());
        pst.setString(7, tf_MaSanPham.getText());
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Đã hoàn thành việc cập nhật");
        GetDataTable();
        reset();

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
        ConnectionDB.closeConnectionDB(con);
    }//GEN-LAST:event_btn_SuaActionPerformed

    private void btn_TimKiemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemSPActionPerformed
         String sql = "";
        Connection con = ConnectionDB.getConnectDB();
         if(tf_MaSP.getText().equals(""))
         {
                sql = "select * from htquanlycuahangvanphongpham.sanpham sp "
                    + "INNER JOIN htquanlycuahangvanphongpham.loai l ON sp.MaLoai = l.MaLoai where 1 = 1"; 
         }
         else
         {
                sql = "select * from htquanlycuahangvanphongpham.sanpham sp "
                    + "INNER JOIN htquanlycuahangvanphongpham.loai l ON sp.MaLoai = l.MaLoai where sp.MaSanPham = '" + tf_MaSP.getText() + "'";
         }
            
            try
            {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
            ResultSetMetaData stData = rs.getMetaData();
            q = stData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel)tb_SanPham.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next()){
                Vector columnData = new Vector();
                for(i=1; i<=q; i++)
                {
                    columnData.add(rs.getString("MaSanPham"));
                    columnData.add(rs.getString("TenSanPham"));
                    columnData.add(rs.getString("TenLoai"));
                    columnData.add(rs.getString("Gia"));
                    columnData.add(rs.getString("DVT"));
                    columnData.add(rs.getString("HanSuDung"));
                    columnData.add(rs.getString("SoLuongTon"));
                    columnData.add(rs.getString("TinhTrang")); 
                }
                RecordTable.addRow(columnData);
                }
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex);
            }
            ConnectionDB.closeConnectionDB(con);
    }//GEN-LAST:event_btn_TimKiemSPActionPerformed
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmQuanLySanPham().setVisible(true);
                } catch (SQLException ex) {
                ex.printStackTrace();
                }
            } 
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Dong;
    private javax.swing.JButton btn_Reset;
    private javax.swing.JButton btn_Sua;
    private javax.swing.JButton btn_Them;
    private javax.swing.JButton btn_TimKiemSP;
    private javax.swing.JButton btn_Xoa;
    private javax.swing.JComboBox<String> cb_LoaiSP;
    private com.toedter.calendar.JDateChooser jDateQuanLySanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_SanPham;
    private javax.swing.JTextField tf_DonViTinh;
    private javax.swing.JTextField tf_Gia;
    private javax.swing.JTextField tf_MaSP;
    private javax.swing.JTextField tf_MaSanPham;
    private javax.swing.JTextField tf_SoLuongTon;
    private javax.swing.JTextField tf_TenSanPham;
    private javax.swing.JTextField tf_TinhTrang;
    // End of variables declaration//GEN-END:variables
}
