/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hethongquanlycuahangvanphongpham;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class frmTaiKhoan extends javax.swing.JFrame {
        PreparedStatement pst = null;
        ResultSet rs = null;
        int q,i;
        
         public void GetDataTable() throws SQLException
        {
            Connection con = ConnectionDB.getConnectDB();
            String sql = "select * from htquanlycuahangvanphongpham.taikhoan";
            try
            {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
            ResultSetMetaData stData = rs.getMetaData();
            q = stData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
            RecordTable.setRowCount(0);
            
            while(rs.next()){
                Vector columnData = new Vector();
                for(i=1; i<=q; i++)
                {
                    columnData.add(rs.getString("Username"));
                    columnData.add(rs.getString("Password"));
                    columnData.add(rs.getString("Quyen"));
                    
                }
                RecordTable.addRow(columnData);
                }
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex);
            }
            ConnectionDB.closeConnectionDB(con);
            
        }
    /**
     * Creates new form frmTaiKhoan
     */
    public frmTaiKhoan() throws SQLException{
        initComponents();
        this.setLocationRelativeTo(null);//Chỉnh JFrame ra giữa màn hình
        GetDataTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tf_UserName = new javax.swing.JTextField();
        tf_Password = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btn_Them = new javax.swing.JButton();
        btn_Sua = new javax.swing.JButton();
        btn_Reset = new javax.swing.JButton();
        btn_Xoa = new javax.swing.JButton();
        btn_Dong = new javax.swing.JButton();
        rb_Admin = new javax.swing.JRadioButton();
        rb_User = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Password", "Quyền"
            }
        ));
        jTable1.setRowHeight(27);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("User Name:");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Password:");

        tf_UserName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tf_Password.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Quyền:");

        btn_Them.setBackground(new java.awt.Color(255, 255, 255));
        btn_Them.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Them.setText("Thêm");
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_Sua.setBackground(new java.awt.Color(255, 255, 255));
        btn_Sua.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Sua.setText("Sửa");
        btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaActionPerformed(evt);
            }
        });

        btn_Reset.setBackground(new java.awt.Color(255, 255, 255));
        btn_Reset.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Reset.setText("Reset");
        btn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResetActionPerformed(evt);
            }
        });

        btn_Xoa.setBackground(new java.awt.Color(255, 255, 255));
        btn_Xoa.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Xoa.setText("Xóa");
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });

        btn_Dong.setBackground(new java.awt.Color(255, 255, 255));
        btn_Dong.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_Dong.setText("Thoát");
        btn_Dong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DongActionPerformed(evt);
            }
        });

        buttonGroup1.add(rb_Admin);
        rb_Admin.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rb_Admin.setText("Admin");

        buttonGroup1.add(rb_User);
        rb_User.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rb_User.setText("User");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("QUẢN LÝ TÀI KHOẢN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(rb_Admin, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(rb_User, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(tf_UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(114, 114, 114)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(318, 318, 318))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btn_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Dong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rb_Admin)
                            .addComponent(rb_User))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Dong, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        Connection con = ConnectionDB.getConnectDB();
        String checkUsername = "SELECT * FROM htquanlycuahangvanphongpham.taikhoan WHERE Username=?";
        String sql = "insert into htquanlycuahangvanphongpham.taikhoan(Username, Password, Quyen) value (?,?,?)";
        try{
            // Kiểm tra xem người dùng đã nhập đủ thông tin hay chưa
        if (tf_UserName.getText().isEmpty() || tf_Password.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hãy điền đủ thông tin.");
            return; // Dừng thực hiện nếu dữ liệu không đủ
        }
        pst = con.prepareStatement(checkUsername);
        pst.setString(1, tf_UserName.getText());
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            JOptionPane.showMessageDialog(null, "Tên người dùng đã tồn tại.");
            return; // Dừng thực hiện nếu tên người dùng đã tồn tại
        }
        pst = con.prepareStatement(sql);
        pst.setString(1, tf_UserName.getText());
        pst.setString(2, tf_Password.getText());
        // Lấy Quyen từ radio buttons
        String selectedQuyen = "";
        if (rb_Admin.isSelected()) {
            selectedQuyen = "Admin";
        } else if (rb_User.isSelected()) {
            selectedQuyen = "User";
        }
        pst.setString(3, selectedQuyen);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Đã hoàn thành việc thêm mới");
        GetDataTable();
        }
        catch(SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        ConnectionDB.closeConnectionDB(con);   
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void btn_DongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DongActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát khỏi ứng dụng này không?", "Thoát khỏi ứng dụng", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_OPTION)
        {
            this.dispose();
        }
    }//GEN-LAST:event_btn_DongActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
        Connection con = ConnectionDB.getConnectDB();
        String sql = "delete from htquanlycuahangvanphongpham.taikhoan where (Username = ?)";
        try{
            if (tf_UserName.getText().equalsIgnoreCase("admin")) {
            JOptionPane.showMessageDialog(null, "Không được xóa người dùng admin.");
            return; // Dừng thực hiện nếu người dùng là "admin"
        }
        pst = con.prepareStatement(sql);
        pst.setString(1, tf_UserName.getText());      
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Đã hoàn thành việc xóa bỏ");
        GetDataTable();
        
        }
        catch(SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        ConnectionDB.closeConnectionDB(con);
    }//GEN-LAST:event_btn_XoaActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    DefaultTableModel RecordTable = (DefaultTableModel)jTable1.getModel();
    int selectedRow = jTable1.getSelectedRow();
    tf_UserName.setText(RecordTable.getValueAt(selectedRow, 0).toString());
    tf_UserName.setEditable(false);
    tf_Password.setText(RecordTable.getValueAt(selectedRow, 1).toString());
    // Lấy giá trị "Quyen" từ bảng
    String quyenValue = RecordTable.getValueAt(selectedRow, 2).toString();
    // Kiểm tra giá trị "Quyen" và chọn radio button tương ứng
    if (quyenValue.equals("Admin")) {
        rb_Admin.setSelected(true);
    } else if (quyenValue.equals("User")) {
        rb_User.setSelected(true);
    }
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void btn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResetActionPerformed
    tf_UserName.setText("");
    tf_UserName.setEditable(true);
    tf_Password.setText("");
    // Clear radio button selection for "Quyen"
    buttonGroup1.clearSelection();
    }//GEN-LAST:event_btn_ResetActionPerformed

    
    
    private void btn_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaActionPerformed
       
        Connection con = ConnectionDB.getConnectDB();
        String sql = "UPDATE htquanlycuahangvanphongpham.taikhoan SET Password=?, Quyen=? WHERE UserName=?";
        try {
        pst = con.prepareStatement(sql);
        pst.setString(1, tf_Password.getText());

        // Get the selected Quyen from the radio buttons
        String selectedQuyen = "";
        if (rb_Admin.isSelected()) {
            selectedQuyen = "Admin";
        } else if (rb_User.isSelected()) {
            selectedQuyen = "User";
        }
        pst.setString(2, selectedQuyen);
        
        pst.setString(3, tf_UserName.getText());
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Đã hoàn thành việc cập nhật");
        GetDataTable();

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
        ConnectionDB.closeConnectionDB(con);
                    
    }//GEN-LAST:event_btn_SuaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            try {
                new frmTaiKhoan().setVisible(true);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Dong;
    private javax.swing.JButton btn_Reset;
    private javax.swing.JButton btn_Sua;
    private javax.swing.JButton btn_Them;
    private javax.swing.JButton btn_Xoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rb_Admin;
    private javax.swing.JRadioButton rb_User;
    private javax.swing.JTextField tf_Password;
    private javax.swing.JTextField tf_UserName;
    // End of variables declaration//GEN-END:variables
}
